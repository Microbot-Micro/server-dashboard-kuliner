// const { Product, Keranjang, Pesanan } = require('../models');
// const { Op  } = require('sequelize');




// class Controller {

//     // getProduct with search
//     static async getProduct(req, res, next) {
//         try {
//             const { search } = req.query;

//             let whereCondition = {};
//             if (search) {
//                 whereCondition = {
//                     nama: {
//                         [Op.iLike]: `%${search}%` // Menggunakan Op.iLike agar pencarian bersifat case-insensitive
//                     }
//                 };
//             }

//             const dataProduct = await Product.findAll({
//                 where: whereCondition
//             });

//             res.status(200).json(dataProduct);
//         } catch (error) {
//             console.error('Error in getProduct:', error);
//             res.status(500).json({ error: 'Internal Server Error' });
//         }
//     }

//     // getByIdProduct
    // static async getByIdProduct(req, res, next) {
    //     try {
    //         const { id } = req.params;
    //         const dataByIdProduct = await Product.findByPk(id);
    //         if (dataByIdProduct) {
    //             res.status(200).json(dataByIdProduct);
    //         } else {
    //             res.status(404).json({ error: 'Product not found' });
    //         }
    //     } catch (error) {
    //         console.error('Error in getByIdProduct:', error);
    //         res.status(500).json({ error: 'Internal Server Error' });
    //     }
    // }

//     // postProduct
//     static async postKeranjangs(req, res, next) {
//         try {
//             const { jumlah_pesanan, keterangan, productId } = req.body;

//             if (jumlah_pesanan === "") {
//                 return res.status(400).json({ error: 'Pesanan tidak boleh kosong ' });
//             }
//             const existingProduct = await Product.findByPk(productId);

//             if (!existingProduct) {
//                 return res.status(404).json({ error: 'Product not found' });
//             }

//             const newPesanan = await Keranjang.create({
//                 jumlah_pesanan: jumlah_pesanan,
//                 keterangan: keterangan,
//                 productId: productId
//             });

//             res.status(200).json(newPesanan);
//         } catch (error) {
//             console.error('Error in postPesanan:', error);
//             res.status(500).json({ error: 'Internal Server Error' });
//         }
//     }

//     // getKeranjangs
//     static async getKeranjangs(req, res, next) {
//         try {
//             const dataKeranjangs = await Keranjang.findAll({
//                 include: {
//                     model: Product
//                 }
//             });
//             res.status(200).json(dataKeranjangs);
//         } catch (error) {
//             console.error('Error in getKeranjangs:', error);
//             res.status(500).json({ error: 'Internal Server Error' });
//         }
//     }

//     // deleteKeranjangs
//     static async deleteKeranjangs(req, res, next) {
//         try {
//             const { id } = req.params
//             const isValidId = await Keranjang.findByPk(id)

//             if (!isValidId) {
//                 res.status(400).json({ error: 'Invalid Request', message: `Data ${id} is not valid` });
//                 return;
//             }

//             const delKeranjang = await Keranjang.destroy({
//                 where: { id: id }
//             })
//             res.status(200).json({
//                 name: `Delete Data Keranjang ${id} Successfully`,
//                 delKeranjang
//             })
//         } catch (error) {
//             console.error('Error in getKeranjangs:', error);
//             res.status(500).json({ error: 'Internal Server Error' });
//         }
//     }

//     // deleteAllKeranjangs
//     static async deleteAllKeranjangs(req, res, next) {
//         try {
//             // Hapus semua data keranjang
//             const delAllKeranjangs = await Keranjang.destroy({
//                 where: {} // Menghapus semua data, karena tidak ada kondisi where
//             });

//             res.status(200).json({
//                 name: 'Delete All Data Keranjang Successfully',
//                 delAllKeranjangs
//             });
//         } catch (error) {
//             console.error('Error in deleteAllKeranjangs:', error);
//             res.status(500).json({ error: 'Internal Server Error' });
//         }
//     }

//     // postPesanans
//     static async postPesanans(req, res, next) {
//         try {
//             const { nama, noMeja, keranjangId } = req.body;
//             const isValidPesanans = await Keranjang.findByPk(keranjangId);

//             if (!isValidPesanans) {
//                 return res.status(404).json({ error: 'Pesanan not found' });
//             }

//             const newPesanan = await Pesanan.create({
//                 nama: nama,
//                 noMeja: noMeja,
//                 keranjangId: keranjangId
//             });

//             res.status(200).json(newPesanan);

//         } catch (error) {
//             console.error('Error in postPesanan:', error);
//             res.status(500).json({ error: 'Internal Server Error' });
//         }
//     }

// }

// module.exports = Controller;

//=============================================================